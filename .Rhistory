train<-dat[-test_index,]
model<- lm(y~x,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
set.seed(1)
n <- 500
Sigma <- 9*matrix(c(1.0, 0.5, 0.5, 1.0), 2, 2)
dat <- MASS::mvrnorm(n = 500, c(69, 69), Sigma) %>%
data.frame() %>% setNames(c("x", "y"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~x,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
set.seed(1)
n <- 1000
Sigma <- 9*matrix(c(1.0, 0.5, 0.5, 1.0), 2, 2)
dat <- MASS::mvrnorm(n = 1000, c(69, 69), Sigma) %>%
data.frame() %>% setNames(c("x", "y"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~x,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
set.seed(1)
n <- 5000
Sigma <- 9*matrix(c(1.0, 0.5, 0.5, 1.0), 2, 2)
dat <- MASS::mvrnorm(n = 5000, c(69, 69), Sigma) %>%
data.frame() %>% setNames(c("x", "y"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~x,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
set.seed(1)
n <- 10000
Sigma <- 9*matrix(c(1.0, 0.5, 0.5, 1.0), 2, 2)
dat <- MASS::mvrnorm(n = 10000, c(69, 69), Sigma) %>%
data.frame() %>% setNames(c("x", "y"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~x,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
min(x)
x
min(x)
mean(x)
set.seed(1)
n <- 1000
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = 100, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
min(x)
set.seed(1)
n <- 1000
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = 100, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
min(x)
set.seed(1)
n <- 1000
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.95, 0.75, 0.95, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = 100, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
set.seed(1)
n <- 1000
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = 100, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~x_1,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
min(x)
set.seed(1)
n <- 1000
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = 100, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~x_2,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
min(x)
set.seed(1)
n <- 1000
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = 100, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
mean(x)
sd(x)
min(x)
set.seed(2)
make_data <- function(n = 1000, p = 0.5,
mu_0 = 0, mu_1 = 2,
sigma_0 = 1,  sigma_1 = 1){
y <- rbinom(n, 1, p)
f_0 <- rnorm(n, mu_0, sigma_0)
f_1 <- rnorm(n, mu_1, sigma_1)
x <- ifelse(y == 1, f_1, f_0)
test_index <- createDataPartition(y, times = 1, p = 0.5, list = FALSE)
list(train = data.frame(x = x, y = as.factor(y)) %>% slice(-test_index),
test = data.frame(x = x, y = as.factor(y)) %>% slice(test_index))
}
dat <- make_data()
rm(list=ls())
set.seed(2)
make_data <- function(n = 1000, p = 0.5,
mu_0 = 0, mu_1 = 2,
sigma_0 = 1,  sigma_1 = 1){
y <- rbinom(n, 1, p)
f_0 <- rnorm(n, mu_0, sigma_0)
f_1 <- rnorm(n, mu_1, sigma_1)
x <- ifelse(y == 1, f_1, f_0)
test_index <- createDataPartition(y, times = 1, p = 0.5, list = FALSE)
list(train = data.frame(x = x, y = as.factor(y)) %>% slice(-test_index),
test = data.frame(x = x, y = as.factor(y)) %>% slice(test_index))
}
dat <- make_data()
dat$train %>% ggplot(aes(x, color = y)) + geom_density()
delta <- seq(0,3,len=25)
dat <- sapply(delta,make_data(mu_0 = .))
RMSES <- function(n){
set.seed(1)
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = n, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
set.seed(1)
rmses <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
c(mean(x),sd(x))
}
RMSES(100)
RMSES <- function(n){
set.seed(1)
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = n, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
c(mean(x),sd(x))
}
RMSES(100)
RMSES <- function(n){
set.seed(1)
Sigma <- 9*matrix(c(1.0, 0.5, 0.5, 1.0), 2, 2)
dat <- MASS::mvrnorm(n = n, c(69, 69), Sigma) %>%
data.frame() %>% setNames(c("x", "y"))
set.seed(1)
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
c(mean(x),sd(x))
}
n <- c(100,500,1000,5000,10000)
res <- sapply(n,RMSES)
res
RMSES <- function(n){
set.seed(1)
Sigma <- 9*matrix(c(1.0, 0.5, 0.5, 1.0), 2, 2)
dat <- MASS::mvrnorm(n = n, c(69, 69), Sigma) %>%
data.frame() %>% setNames(c("x", "y"))
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
c(mean(x),sd(x))
}
n <- c(100,500,1000,5000,10000)
set.seed(1)
RMSES <- function(n){
Sigma <- 9*matrix(c(1.0, 0.5, 0.5, 1.0), 2, 2)
dat <- MASS::mvrnorm(n = n, c(69, 69), Sigma) %>%
data.frame() %>% setNames(c("x", "y"))
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
c(mean(x),sd(x))
}
n <- c(100,500,1000,5000,10000)
set.seed(1)
res <- sapply(n,RMSES)
res
RMSES <- function(n){
set.seed(1)
n <- 1000
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = 100, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
c(mean(x),sd(x))
}
RMSES(1000)
set.seed(1)
n <- 1000
Sigma <- matrix(c(1.0, 0.75, 0.75, 0.75, 1.0, 0.25, 0.75, 0.25, 1.0), 3, 3)
dat <- MASS::mvrnorm(n = 100, c(0, 0, 0), Sigma) %>%
data.frame() %>% setNames(c("y", "x_1", "x_2"))
x <- replicate(100, {
test_index<-createDataPartition(dat$y,times=1,list=FALSE)
test<-dat[test_index,]
train<-dat[-test_index,]
model<- lm(y~.,data = train)
y_hat<- predict(model, test)
sqrt(mean((y_hat-test$y)^2)) }
)
min(x)
library(tidyverse)
library(purrr)
library(pdftools)
fn <- system.file("extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
dat <- map_df(str_split(pdf_text(fn), "\n"), function(s){
s <- str_trim(s)
header_index <- str_which(s, "2015")[1]
tmp <- str_split(s[header_index], "\\s+", simplify = TRUE)
month <- tmp[1]
header <- tmp[-1]
tail_index  <- str_which(s, "Total")
n <- str_count(s, "\\d+")
out <- c(1:header_index, which(n==1), which(n>=28), tail_index:length(s))
s[-out] %>%
str_remove_all("[^\\d\\s]") %>%
str_trim() %>%
str_split_fixed("\\s+", n = 6) %>%
.[,1:5] %>%
as_data_frame() %>%
setNames(c("day", header)) %>%
mutate(month = month,
day = as.numeric(day)) %>%
gather(year, deaths, -c(day, month)) %>%
mutate(deaths = as.numeric(deaths))
}) %>%
mutate(month = recode(month, "JAN" = 1, "FEB" = 2, "MAR" = 3, "APR" = 4, "MAY" = 5, "JUN" = 6,
"JUL" = 7, "AGO" = 8, "SEP" = 9, "OCT" = 10, "NOV" = 11, "DEC" = 12)) %>%
mutate(date = make_date(year, month, day)) %>%
filter(date <= "2018-05-01")
install.packages(c("tidyverse", "pdftools"))
library(tidyverse)
library(purrr)
library(pdftools)
fn <- system.file("extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
dat <- map_df(str_split(pdf_text(fn), "\n"), function(s){
s <- str_trim(s)
header_index <- str_which(s, "2015")[1]
tmp <- str_split(s[header_index], "\\s+", simplify = TRUE)
month <- tmp[1]
header <- tmp[-1]
tail_index  <- str_which(s, "Total")
n <- str_count(s, "\\d+")
out <- c(1:header_index, which(n==1), which(n>=28), tail_index:length(s))
s[-out] %>%
str_remove_all("[^\\d\\s]") %>%
str_trim() %>%
str_split_fixed("\\s+", n = 6) %>%
.[,1:5] %>%
as_data_frame() %>%
setNames(c("day", header)) %>%
mutate(month = month,
day = as.numeric(day)) %>%
gather(year, deaths, -c(day, month)) %>%
mutate(deaths = as.numeric(deaths))
}) %>%
mutate(month = recode(month, "JAN" = 1, "FEB" = 2, "MAR" = 3, "APR" = 4, "MAY" = 5, "JUN" = 6,
"JUL" = 7, "AGO" = 8, "SEP" = 9, "OCT" = 10, "NOV" = 11, "DEC" = 12)) %>%
mutate(date = make_date(year, month, day)) %>%
filter(date <= "2018-05-01")
library(tidyverse)
library(purrr)
library(pdftools)
fn <- system.file("dslabs/extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
dat <- map_df(str_split(pdf_text(fn), "\n"), function(s){
s <- str_trim(s)
header_index <- str_which(s, "2015")[1]
tmp <- str_split(s[header_index], "\\s+", simplify = TRUE)
month <- tmp[1]
header <- tmp[-1]
tail_index  <- str_which(s, "Total")
n <- str_count(s, "\\d+")
out <- c(1:header_index, which(n==1), which(n>=28), tail_index:length(s))
s[-out] %>%
str_remove_all("[^\\d\\s]") %>%
str_trim() %>%
str_split_fixed("\\s+", n = 6) %>%
.[,1:5] %>%
as_data_frame() %>%
setNames(c("day", header)) %>%
mutate(month = month,
day = as.numeric(day)) %>%
gather(year, deaths, -c(day, month)) %>%
mutate(deaths = as.numeric(deaths))
}) %>%
mutate(month = recode(month, "JAN" = 1, "FEB" = 2, "MAR" = 3, "APR" = 4, "MAY" = 5, "JUN" = 6,
"JUL" = 7, "AGO" = 8, "SEP" = 9, "OCT" = 10, "NOV" = 11, "DEC" = 12)) %>%
mutate(date = make_date(year, month, day)) %>%
filter(date <= "2018-05-01")
library(tidyverse)
library(purrr)
library(pdftools)
fn <- system.file("dslabs/extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
dat <- map_df(str_split(pdf_text(fn), "\n"), function(s){
s <- str_trim(s)
header_index <- str_which(s, "2015")[1]
tmp <- str_split(s[header_index], "\\s+", simplify = TRUE)
month <- tmp[1]
header <- tmp[-1]
tail_index  <- str_which(s, "Total")
n <- str_count(s, "\\d+")
out <- c(1:header_index, which(n==1), which(n>=28), tail_index:length(s))
s[-out] %>%
str_remove_all("[^\\d\\s]") %>%
str_trim() %>%
str_split_fixed("\\s+", n = 6) %>%
.[,1:5] %>%
as_data_frame() %>%
setNames(c("day", header)) %>%
mutate(month = month,
day = as.numeric(day)) %>%
gather(year, deaths, -c(day, month)) %>%
mutate(deaths = as.numeric(deaths))
}) %>%
mutate(month = recode(month, "JAN" = 1, "FEB" = 2, "MAR" = 3, "APR" = 4, "MAY" = 5, "JUN" = 6,
"JUL" = 7, "AGO" = 8, "SEP" = 9, "OCT" = 10, "NOV" = 11, "DEC" = 12)) %>%
mutate(date = make_date(year, month, day)) %>%
filter(date <= "2018-05-01")
fn <- system.file("dslabs/extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
system.file("dslabs/extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
fn <- system.file("extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
library(tidyverse)
library(purrr)
library(pdftools)
fn <- system.file("extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
dat <- map_df(str_split(pdf_text(fn), "\n"), function(s){
s <- str_trim(s)
header_index <- str_which(s, "2015")[1]
tmp <- str_split(s[header_index], "\\s+", simplify = TRUE)
month <- tmp[1]
header <- tmp[-1]
tail_index  <- str_which(s, "Total")
n <- str_count(s, "\\d+")
out <- c(1:header_index, which(n==1), which(n>=28), tail_index:length(s))
s[-out] %>%
str_remove_all("[^\\d\\s]") %>%
str_trim() %>%
str_split_fixed("\\s+", n = 6) %>%
.[,1:5] %>%
as_data_frame() %>%
setNames(c("day", header)) %>%
mutate(month = month,
day = as.numeric(day)) %>%
gather(year, deaths, -c(day, month)) %>%
mutate(deaths = as.numeric(deaths))
}) %>%
mutate(month = recode(month, "JAN" = 1, "FEB" = 2, "MAR" = 3, "APR" = 4, "MAY" = 5, "JUN" = 6,
"JUL" = 7, "AGO" = 8, "SEP" = 9, "OCT" = 10, "NOV" = 11, "DEC" = 12)) %>%
mutate(date = make_date(year, month, day)) %>%
filter(date <= "2018-05-01")
library("lubridate", lib.loc="~/R/win-library/3.5")
library(tidyverse)
library(purrr)
library(pdftools)
fn <- system.file("extdata", "RD-Mortality-Report_2015-18-180531.pdf", package="dslabs")
dat <- map_df(str_split(pdf_text(fn), "\n"), function(s){
s <- str_trim(s)
header_index <- str_which(s, "2015")[1]
tmp <- str_split(s[header_index], "\\s+", simplify = TRUE)
month <- tmp[1]
header <- tmp[-1]
tail_index  <- str_which(s, "Total")
n <- str_count(s, "\\d+")
out <- c(1:header_index, which(n==1), which(n>=28), tail_index:length(s))
s[-out] %>%
str_remove_all("[^\\d\\s]") %>%
str_trim() %>%
str_split_fixed("\\s+", n = 6) %>%
.[,1:5] %>%
as_data_frame() %>%
setNames(c("day", header)) %>%
mutate(month = month,
day = as.numeric(day)) %>%
gather(year, deaths, -c(day, month)) %>%
mutate(deaths = as.numeric(deaths))
}) %>%
mutate(month = recode(month, "JAN" = 1, "FEB" = 2, "MAR" = 3, "APR" = 4, "MAY" = 5, "JUN" = 6,
"JUL" = 7, "AGO" = 8, "SEP" = 9, "OCT" = 10, "NOV" = 11, "DEC" = 12)) %>%
mutate(date = make_date(year, month, day)) %>%
filter(date <= "2018-05-01")
dat
